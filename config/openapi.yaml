openapi: 3.0.0
info: 
  title: Community Events API
  description: event management api
  version: 1.0.0
  contact:
    name: Author
    email: stephen@enterity.com
servers:
  - url: https://dev.community-events.com/v1
    description: Development server
security:
  - JWT: []

components:
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: app.auth.decode_token
  parameters:
    startParam:
      name: from
      in: query
      schema:
        type: string
        format: date
    endParam:
      name: to
      in: query
      schema:
        type: string
        format: date
    categoryParam:
      name: category
      in: query
      schema:
        type: array
        items:
          oneOf:
            - type: string # category id
              format: uuid
            - type: string # category name
  responses:
    NotFound:
      description: Not Found
    Ok:
      description: Ok
  schemas:
    Site:
      properties:
        info:
          type: array
          items:
            type: object
            properties:
              language:
                $ref: 'file:/opt/calendar/config/language_codes.yaml#/LanguageCode'
              title:
                type: string
        default_language:
          $ref: 'file:/opt/calendar/config/language_codes.yaml#/LanguageCode'
        languages:
          type: array
          items:
            $ref: 'file:/opt/calendar/config/language_codes.yaml#/LanguageCode'
        header_image:
          $ref: '#/components/schemas/Image'
    Category:
      properties:
        id:
          type: string
          format: uuid
        info:
          type: array
          items:
            type: object
            properties:
              language:
                $ref: 'file:/opt/calendar/config/language_codes.yaml#/LanguageCode'
              name:
                type: string
              description:
                type: string
        parent:
            oneOf:
              - type: string
                format: uuid
              - $ref: '#/components/schemas/Category'
        children:
            type: array
            items:
              oneOf:
                - type: string
                  format: uuid
                - $ref: '#/components/schemas/Category'
    Image:
      properties:
        info:
          type: array
          items:
            type: object
            properties:
              language:
                $ref: 'file:/opt/calendar/config/language_codes.yaml#/LanguageCode'
              title:
                type: string
              description:
                type: string
        data:
          type: string
          format: byte
    Location:
      properties:
        address1:
          type: string
        address2:
          type: string
        city:
          type: string
        state:
          type: string
        postal_code:
          type: string
        info:
          type: array
          items:
            type: object
            properties:
              language:
                $ref: 'file:/opt/calendar/config/language_codes.yaml#/LanguageCode'
              name:
                type: string
              description:
                type: string
              accessibility_information:
                type: string
    Event:
      properties:
        id:
          type: string
          format: uuid
        contact_phone:
          type: string
        contact_url:
          type: string
          format: url
        contact_email:
          type: string
          format: email
        status:
          type: string
          enum:
            - Draft
            - Active
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        dates_only:
          type: boolean
        repeat:
          type: string
          enum:
            - Daily
            - Weekly
            - Monthly
        repeat_by:
          type: string
          enum:
            - DayOfMonth
            - WeekdayOfMonth
        info:
          type: array
          items:
            type: object
            properties:
              language:
                $ref: 'file:/opt/calendar/config/language_codes.yaml#/LanguageCode'
              title:
                type: string
              description:
                type: string
              accessibility_information:
                type: string
        location:
            oneOf:
              - type: string
                format: uuid
              - $ref: '#/components/schemas/Location'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        categories:
          type: array
          items:
            oneOf:
              - type: string
                format: uuid
              - $ref: '#/components/schemas/Category'
        events:
          type: array
          items:
            oneOf:
              - type: string
                format: uuid
              - $ref: '#/components/schemas/Event'
    User:
      properties:
        language:
          $ref: 'file:/opt/calendar/config/language_codes.yaml#/LanguageCode'
        email:
          type: string
          format: email
        roles:
          type: array
          items:
            type: string
            enum:
              - Administrator
              - Editor
              - Contributor
paths:
  /site:
    get:
      security: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Site'
      responses:
        '200':
          $ref: '#/components/responses/Ok'
  /site/image:
    post:
      operationId: app.site.post_image
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Ok
  /site/languages:
    get:
      security: []
      operationId: app.site.get_languages
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: object

  /events:
    get:
      security: []
      parameters:
        - $ref: '#/components/parameters/categoryParam'
        - $ref: '#/components/parameters/startParam'
        - $ref: '#/components/parameters/endParam'
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          $ref: '#/components/responses/Ok'

  /events/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
    get:
      security: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      operationId: app.events.update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          $ref: '#/components/responses/Ok'
  /events/{id}/image:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
    post:
      operationId: app.events.post_image
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Ok
    get:
      operationId: app.events.get_image
      responses:
        '200':
          description: Ok
          content:
            image/png:
              schema:
                type: string
                format: binary
            image/jpeg:
              schema:
                type: string
                format: binary
  /categories:
    get:
      security: []
      parameters:
        - in: query
          name: category
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          $ref: '#/components/responses/Ok'
  /categories/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
    get:
      security: []
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
    post:
      operationId: app.categories.update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          $ref: '#/components/responses/Ok'
  /users:
    get:
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          $ref: '#/components/responses/Ok'
  /users/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
    get:
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    post:
      operationId: app.users.update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          $ref: '#/components/responses/Ok'
  /auth/token:
    post:
      description: submit user credentials to receive a JSON web token
      operationId: app.auth.get_token
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: A JWT
          content:
            'text/plain':
              schema:
                type: string
        '401':
          description: Failed Login
    get:
      description: submit about-to-expire JSON web token to receive a replacement
      operationId: app.auth.refresh_token
      responses:
        '200':
          description: A JWT
          content:
            'text/plain':
              schema:
                type: string
        '401':
          description: Cannot refresh with provided token

